<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on</title><link>/projects/</link><description>Recent content in Projects on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 22 Oct 2023 09:03:20 -0800</lastBuildDate><atom:link href="/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Hash Cracking with quantum Computing</title><link>/projects/hash-cracking/</link><pubDate>Sun, 22 Oct 2023 09:03:20 -0800</pubDate><guid>/projects/hash-cracking/</guid><description>CS689 - Assign2 source code
Hash Function The hash function has beed implemented in hash_function.py file. The hash function is based on 8bit Pearson Hash This hash function is safe (if we ignore the hash size) for classical computer. To demonstrate it&amp;rsquo;s safeness, we can plot it for upto certain number and check for any pattern to show up. Usages Run python3 hash_function.py --n 4 --extend 3 --n is the number of bits in the hash --extend means plot will be extended to $(2^n)*extend$ number of points Output The above plot is for 8bit Pearson hash function and it shows randomness.</description></item><item><title>4 Register Assembler and Emulator</title><link>/projects/labcompilor/</link><pubDate>Tue, 20 Dec 2022 09:03:20 -0800</pubDate><guid>/projects/labcompilor/</guid><description>TITLE: 4 Register Assembler and Emulator Author: RUPAK BISWAS Date: 2021-09-16 Files: *All the files i submitted, asm.c and emu.c and claims.txt, have my name and student id at the start, along with a declaration of authorship.
The evidence for Assembler including the output files from the X (eg five) test examples has also been uploaded. They are test1(3 output files), test2(3 output files), test3 (1 output file), memcpy(3 output files) and triangle(3 output files).</description></item><item><title>ESP-RECON</title><link>/projects/esp-recon/</link><pubDate>Tue, 20 Dec 2022 09:03:20 -0800</pubDate><guid>/projects/esp-recon/</guid><description>Handwritten Digit Recognition The goal of the project is to implement CNN based digit-recognition system in a edge and resource constrained device. More specifically, I used a esp32-cam module, which have 2mp camera, 512kb RAM and 4Mb flash memory. My object is to capture image in a loop, crop that image, send to the cnn modelâ€™s input tensor, run the model ( invoke ) and output the result based on maximum probability returned</description></item><item><title>FILE-AUTH</title><link>/projects/fileauth/</link><pubDate>Tue, 20 Dec 2022 09:03:20 -0800</pubDate><guid>/projects/fileauth/</guid><description>File-Auth Codepeak 2021 Open source
A secure-authentication system which verifies users by verifying an uploaded file.
Advantages Hard/near-impossible to bruteforce. No need to remember password. Even if somebody sees your file they can&amp;rsquo;t get access to the account. Storage space doesn&amp;rsquo;t depend on the file size. Reduces working time &amp;amp; increases productivity. Credentials accessible anytime &amp;amp; anywhere with just few clicks. Easy to understand and use for beginners. Highly accessible with low skill gap.</description></item><item><title>PyGoat</title><link>/projects/pygoat/</link><pubDate>Tue, 20 Dec 2022 09:03:20 -0800</pubDate><guid>/projects/pygoat/</guid><description>PyGoat intentionally vuln web Application Security in django. our roadmap build intentionally vuln web Application in django. The Vulnerability can based on OWASP top ten Table of Contents pygoat Installation From Sources Docker Container Installation Video Uninstallation Solutions For Developers Installation From Sources To setup the project on your local machine: First, Clone the repository using GitHub website or git in Terminal
git clone https://github.com/adeyosemanputra/pygoat.git
### To Download a specific branch
git clone -b &amp;lt;branch_name&amp;gt; https://github.</description></item><item><title>TemplateGen</title><link>/projects/template-gen/</link><pubDate>Tue, 20 Dec 2022 09:03:20 -0800</pubDate><guid>/projects/template-gen/</guid><description>Template Generator: Usage Use this for generating a file on some template. Before start using please change the please mention your template folder path in the config.py file.
For adding template in your template file, use the template extension. For example py1.template is a template file.
Commands : For listing all templates use -l flag. templategen -l For generating a file from a template use -t flag for template name then the file name.</description></item></channel></rss>