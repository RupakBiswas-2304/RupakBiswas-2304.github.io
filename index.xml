<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>@metaphor</title><link>https://rupakbiswas-2304.github.io/</link><description>Recent content on @metaphor</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rupakbiswas-2304.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://rupakbiswas-2304.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/about/</guid><description/></item><item><title/><link>https://rupakbiswas-2304.github.io/blog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/blog/</guid><description>BLOGs ESP32 ESP32 is a series of low-cost, low-power system on a chip microcontrollers with integrated Wi-Fi and dual-mode Bluetooth.</description></item><item><title/><link>https://rupakbiswas-2304.github.io/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/contact/</guid><description/></item><item><title/><link>https://rupakbiswas-2304.github.io/description/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/description/</guid><description>Hello , Rupak this side üôã‚Äç‚ôÇÔ∏è This is my personal domain üôÑ You can find some useful stuffs in Blogs section üòä Don&amp;rsquo;t Go to the notes, it&amp;rsquo;s just for me üò∂‚Äçüå´Ô∏è Checkout my projects, I have some cool stuffs there ( Please give me a ‚≠ê if you like it ) Checkout my socials, I am not much active though ü´•</description></item><item><title/><link>https://rupakbiswas-2304.github.io/esp32/blink/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/esp32/blink/</guid><description>Simple Blink Led in ESP32 As we have successfully managed to install ESP-IDF we can start coding and uploading in ESP32.
We will follow the bellow file structure
main
|--&amp;gt; CMakeLists.txt
|--&amp;gt; component.mk
|--&amp;gt; main.cpp
|--&amp;gt; additional-files.cpp
|--&amp;gt; additional-header-files.cpp CMakeLists.txt
example_test.py
README.md Create a project folder and enter in the folder Create all the files mentioned above</description></item><item><title/><link>https://rupakbiswas-2304.github.io/esp32/espnow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/esp32/espnow/</guid><description>ESP-NOW [ micropython ] Installation This module is not available in the default firmware To install this module we need to flash percompiled firmware (with esp-now module) or compile the firmware from source To flash precompiled firmware, download the firmware from here source code How to flash ? go to this link Sender Code import network import espnow # A WLAN interface must be active to send()/recv() sta = network.WLAN(network.STA_IF) # Or network.</description></item><item><title/><link>https://rupakbiswas-2304.github.io/esp32/how_to_flash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/esp32/how_to_flash/</guid><description>how to flash defualt firmware in esp32 ? [ linux &amp;amp; windows ]
go to https://www.espressif.com/en/support/download/at. (or google search esp firmware)
download the firmware according to your board version.
make sure to have esptool.py installed or do pip install esptool insteed
erase the flash memory esptool.py --port /dev/ttyusb0 erase_flash
flase the downloaded firmware esptool.py --port /dev/ttyusb0 --baud 460800 write_flash --flash_size=detect 0 factory/factory_wroom-32.bin
for windows users, port might be com7/com8 etc instead of /dev/ttyusb0, go to device manager and check the port number</description></item><item><title/><link>https://rupakbiswas-2304.github.io/esp32/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/esp32/installation/</guid><description>Installation of ESP-IDF (windows)
Install ESP-IDF installer from here For linux and mac get it from here Goto here for brief installation guide Open installer and check all the check all the checkbox and do a default installation</description></item><item><title/><link>https://rupakbiswas-2304.github.io/esp32/main/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/esp32/main/</guid><description>Index Getting Started I (windows) Installing default firmware Installing MicroPython firmware OLED with MicroPython on ESP32 ESP-NOW [ micropython ]</description></item><item><title/><link>https://rupakbiswas-2304.github.io/esp32/micropython/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/esp32/micropython/</guid><description>How to flash microPython firmware in esp32 [ linux &amp;amp; windows ]
go to micropython offical site
Select esp32 or any other board if you are using
make sure to have esptool.py installed or do pip install esptool instead
Download the firmware ( latest prefferable )
erase the flash memory esptool.py --port /dev/ttyusb0 erase_flash
flase the downloaded firmware esptool.py --chip esp32 --port /dev/ttyUSB0 --baud 460800 write_flash -z 0x1000 esp32-20190125-v1.10.bin
for windows users, port might be com7/com8 etc instead of /dev/ttyusb0, go to device manager and check the port number</description></item><item><title/><link>https://rupakbiswas-2304.github.io/esp32/oledmpy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/esp32/oledmpy/</guid><description>OLED with MicroPython on ESP32 Connection VCC to 3.3V GND to GND SCL/SCK to GPIO22 SDA to GPIO21 Installations Need to install SSD1306 OLED Library Open Editor ( Thonny or uPyCraft ) Create a file named ssd1306.py Copy the code from here Save the file Code Imports &amp;ndash;&amp;gt; from machine import Pin, SoftI2C
import ssd1306
from time import sleep Create I2C object &amp;ndash;&amp;gt; i2c = SoftI2C(scl=Pin(22), sda=Pin(21)) Create OLED object &amp;ndash;&amp;gt; oled_width = 128
oled_height = 64
oled = ssd1306.</description></item><item><title/><link>https://rupakbiswas-2304.github.io/notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/notes/</guid><description>TOPICS CNN</description></item><item><title/><link>https://rupakbiswas-2304.github.io/notes/cnn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/notes/cnn/</guid><description/></item><item><title/><link>https://rupakbiswas-2304.github.io/notes/tflite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/notes/tflite/</guid><description/></item><item><title/><link>https://rupakbiswas-2304.github.io/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/project/</guid><description>MY PROJECTS PYGOAT Description: The purpose is to give developers and testers a platform for learning how to test applications and code securely. PyGoat is written in python and uses the Django web framework as a platform. It also has web application vulnerabilities (such as XSS and SQLi). PyGoat also provides a section where you may view the source code, identify the error that led to the vulnerability, and make adjustments to secure it.</description></item><item><title/><link>https://rupakbiswas-2304.github.io/projects/esp-recon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/projects/esp-recon/</guid><description>Handwritten Digit Recognition The goal of the project is to implement CNN based digit-recognition system in a edge and resource constrained device. More specifically, I used a esp32-cam module, which have 2mp camera, 512kb RAM and 4Mb flash memory. My object is to capture image in a loop, crop that image, send to the cnn model‚Äôs input tensor, run the model ( invoke ) and output the result based on maximum probability returned</description></item><item><title/><link>https://rupakbiswas-2304.github.io/projects/fileauth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/projects/fileauth/</guid><description>File-Auth Codepeak 2021 Open source
A secure-authentication system which verifies users by verifying an uploaded file.
Advantages Hard/near-impossible to bruteforce. No need to remember password. Even if somebody sees your file they can&amp;rsquo;t get access to the account. Storage space doesn&amp;rsquo;t depend on the file size. Reduces working time &amp;amp; increases productivity. Credentials accessible anytime &amp;amp; anywhere with just few clicks. Easy to understand and use for beginners. Highly accessible with low skill gap.</description></item><item><title/><link>https://rupakbiswas-2304.github.io/projects/labcompilor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/projects/labcompilor/</guid><description>TITLE: 4 Register Assembler and Emulator Author: RUPAK BISWAS Date: 2021-09-16 Files: *All the files i submitted, asm.c and emu.c and claims.txt, have my name and student id at the start, along with a declaration of authorship.
The evidence for Assembler including the output files from the X (eg five) test examples has also been uploaded. They are test1(3 output files), test2(3 output files), test3 (1 output file), memcpy(3 output files) and triangle(3 output files).</description></item><item><title/><link>https://rupakbiswas-2304.github.io/projects/pygoat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rupakbiswas-2304.github.io/projects/pygoat/</guid><description>PyGoat intentionally vuln web Application Security in django. our roadmap build intentionally vuln web Application in django. The Vulnerability can based on OWASP top ten Table of Contents pygoat Installation From Sources Docker Container Installation Video Uninstallation Solutions For Developers Installation From Sources To setup the project on your local machine: First, Clone the repository using GitHub website or git in Terminal
git clone https://github.com/adeyosemanputra/pygoat.git
### To Download a specific branch
git clone -b &amp;lt;branch_name&amp;gt; https://github.</description></item></channel></rss>